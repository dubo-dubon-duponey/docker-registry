http://127.0.0.1:10043 {
  @pull_disabled {
    expression '{$PULL}' == 'disabled'
    method HEAD GET
    path /v2/*
  }

  @pull_anonymous {
    expression '{$PULL}' == 'anonymous'
    method HEAD GET
    path /v2/*
  }

  @pull_authenticated {
    expression '{$PULL}' == 'authenticated'
    method HEAD GET
    path /v2/*
  }

  @push_disabled {
    expression '{$PUSH}' == 'disabled'
    method POST PUT PATCH DELETE
    path /v2/*
  }

  @push_authenticated {
    expression '{$PUSH}' == 'authenticated'
    method POST PUT PATCH DELETE
    path /v2/*
  }

  handle @pull_disabled {
    respond 403 {
      body "{\"details\": \"Pull is disabled on this server\"}"
      close
    }
  }

  handle @push_disabled {
    respond 403 {
      body "{\"details\": \"Push is disabled on this server\"}"
      close
    }
  }

  # Crummy af. The host we have to restore because it was stripped (for our middleware backend does not see it)
  # The port... forces tls
  # Cannot NOT set the port, because our middleware port is not what we want for redirects...
  handle @pull_anonymous {
    reverse_proxy http://127.0.0.1:10042 {
      header_up X-Forwarded-Port {$CDY_PORT_HTTPS}
      header_up Host {http.request.header.X-Host}
      header_up X-Real-IP {remote_ip}
    }
  }

  handle @pull_authenticated {
    import /config/caddy/conf.d/auth.conf "{$CDY_AUTH_REALM}" "{$CDY_AUTH_USERNAME}" "{$CDY_AUTH_PASSWORD}"

    reverse_proxy http://127.0.0.1:10042 {
      header_up X-Forwarded-Port {$CDY_PORT_HTTPS}
      header_up Host {http.request.header.X-Host}
      header_up X-Real-IP {remote_ip}
    }
  }

  handle @push_authenticated {
    import /config/caddy/conf.d/auth.conf "{$CDY_AUTH_REALM}" "{$CDY_AUTH_USERNAME}" "{$CDY_AUTH_PASSWORD}"

    reverse_proxy http://127.0.0.1:10042 {
      header_up X-Forwarded-Port {$CDY_PORT_HTTPS}
      header_up Host {http.request.header.X-Host}
      header_up X-Real-IP {remote_ip}
    }
  }

  # Remove dupe entry (this is set by the backend)
  header -Docker-Distribution-API-Version
  header Docker-Distribution-API-Version "registry/2.0"
}
